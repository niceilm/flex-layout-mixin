@mixin _support-value($value, $list) {
  @if index($list, $value) == null {
    @error "not support #{$value}. possible values #{$list}";
  }
}

@mixin _only-support-int($value) {
  @if type-of($value) != number or unit($value) != '' {
    @error "not support #{$value} only int";
  }
}

@mixin _fx-layout-align-main-axis($value) {
  @include _support-value($value, (null, start, center, end, space-around, space-between, space-evenly));

  @if $value != null {
    @if $value == 'start' {
      $value: flex-start;
    } @else if $value == 'end' {
      $value: flex-end;
    }
    justify-content: $value;
  }
}

@mixin _fx-layout-align-cross-axis($value) {
  @include _support-value($value, (null, start, center, end, space-around, space-between, space-evenly, stretch));

  @if $value != null {
    @if $value == 'start' {
      $value: flex-start;
    } @else if $value == 'end' {
      $value: flex-end;
    }
    align-content: $value;
    align-items: $value;
  }
}

@mixin _fx-layout-gap($value, $direction) {
  @if $value != null {
    @include _support-value(unit($value), ('%', px, vh, vw));
    $margin-direction: right;
    @if $direction == column {
      $margin-direction: bottom;
    } @else if $direction == column-reverse {
      $margin-direction: top;
    } @else if $direction == row-reverse {
      $margin-direction: left;
    }

    & > *:not(:last-child) {
      margin-#{$margin-direction}: $value;
    }
  }
}

@mixin _fx-wrap($value) {
  @if $value != null {
    flex-wrap: $value;
  }
}

